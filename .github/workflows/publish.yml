name: Publish

on:
  release:
    # We'll run this workflow when a new GitHub release is created
    types: [ released ]

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11

      - name: Create quash.properties file
        run: |
          echo "FirebaseApiKey=${{ secrets.FIREBASE_API_KEY }}" > $GITHUB_WORKSPACE/quash/quash.properties
          echo "FirebaseAppId=${{ secrets.FIREBASE_APP_ID }}" >> $GITHUB_WORKSPACE/quash/quash.properties
          echo "FirebaseProjectId=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_WORKSPACE/quash/quash.properties
          echo "ReleaseBaseUrl=${{ secrets.RELEASE_BASE_URL }}" >> $GITHUB_WORKSPACE/quash/quash.properties
          echo "DebugBaseUrl=${{ secrets.DEBUG_BASE_URL }}" >> $GITHUB_WORKSPACE/quash/quash.properties

      - name: List contents of quash directory
        run: ls -al $GITHUB_WORKSPACE/quash/

      - name: Log quash.properties content
        run: cat $GITHUB_WORKSPACE/quash/quash.properties

      - name: Create google-services.json
        run: |
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > $GITHUB_WORKSPACE/quash/google-services.json

      - name: Release build
        run: ./gradlew :quash:assembleRelease

      - name: Publish to MavenCentral
        run: ./gradlew publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
